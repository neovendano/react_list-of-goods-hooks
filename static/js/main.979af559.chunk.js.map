{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NoSort","sortType","setSortType","isReversed","setIsReversed","sortedGoods","goods","sortingGoods","ByLength","sort","a","b","length","Alphabetically","localeCompare","Error","reverse","sortGoods","isResetButtonAvailable","className","type","cn","onClick","wasReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,UAAAA,E,oBAAAA,E,iCAAAA,M,KAML,IA2BaE,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,QAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA/BU,SAChBC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASI,OACZ,MACF,KAAKJ,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAEE,OAASD,EAAEC,UACzD,MACF,KAAKhB,EAASiB,eACZN,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAEI,cAAcH,MAC5D,MACF,QACE,MAAMI,MAAM,6BAOhB,OAJIZ,GACFI,EAAaS,UAGRT,EAOaU,CAAUpB,EAAiBI,EAAUE,GAEnDe,EAAyBjB,GAAYE,EAO3C,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYpB,IAAaL,EAASiB,iBAEtCS,QAAS,kBAAMpB,EAAYN,EAASiB,iBAPtC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASY,WAEtCc,QAAS,kBAAMpB,EAAYN,EAASY,WAPtC,4BAYA,wBACEY,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAc,SAAAmB,GAAW,OAAKA,MAP/C,qBAYCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAhDgB,WACxBpB,EAAYN,EAASI,QACrBI,GAAc,IA2CR,sBAUJ,6BACE,6BACGC,EAAYmB,KAAK,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cClHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.979af559.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NoSort = '',\n  ByLength = 'byLength',\n  Alphabetically = 'alphabetically',\n}\n\nconst sortGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const sortingGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.NoSort:\n      break;\n    case SortType.ByLength:\n      sortingGoods.sort((a: string, b: string) => a.length - b.length);\n      break;\n    case SortType.Alphabetically:\n      sortingGoods.sort((a: string, b: string) => a.localeCompare(b));\n      break;\n    default:\n      throw Error('Unexpected SortType value');\n  }\n\n  if (isReversed) {\n    sortingGoods.reverse();\n  }\n\n  return sortingGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NoSort);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortGoods(goodsFromServer, sortType, isReversed);\n\n  const isResetButtonAvailable = sortType || isReversed;\n\n  const handleButtonReset = () => {\n    setSortType(SortType.NoSort);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.Alphabetically },\n          )}\n          onClick={() => setSortType(SortType.Alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.ByLength },\n          )}\n          onClick={() => setSortType(SortType.ByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(wasReversed => !wasReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonAvailable && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleButtonReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map((good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          )))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}