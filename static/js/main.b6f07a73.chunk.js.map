{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","noSort","sortType","setSortType","isReversed","setIsReversed","renderedGoods","goods","sortingGoods","byLength","sort","firstGood","secondGood","length","alphabetically","localeCompare","Error","reverse","sortGoods","isResetButtonAvailable","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,UAAAA,E,oBAAAA,E,iCAAAA,M,KAML,IA+BaE,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,QAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAnCU,SAChBC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASI,OACZ,MACF,KAAKJ,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAmBC,GACpC,OAAOD,EAAUE,OAASD,EAAWC,UAEvC,MACF,KAAKhB,EAASiB,eACZN,EAAaE,MAAK,SAACC,EAAmBC,GACpC,OAAOD,EAAUI,cAAcH,MAEjC,MACF,QACE,MAAMI,MAAM,6BAOhB,OAJIZ,GACFI,EAAaS,UAGRT,EAOeU,CAAUpB,EAAiBI,EAAUE,GAErDe,EAAyBjB,GAAYE,EAO3C,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYpB,IAAaL,EAASiB,iBAEpCS,QAAS,kBAAMpB,EAAYN,EAASiB,iBALtC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYpB,IAAaL,EAASY,WAEpCc,QAAS,kBAAMpB,EAAYN,EAASY,WALtC,4BAUA,wBACEY,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAalB,IAEfmB,QAAS,kBAAMlB,GAAeD,IALhC,qBAUCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAzCjBpB,EAAYN,EAASI,aACrBI,GAAc,IAqCR,sBAUJ,6BACE,6BACGC,EAAckB,KAAK,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cClHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6f07a73.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  noSort = '',\n  byLength = 'byLength',\n  alphabetically = 'alphabetically',\n}\n\nconst sortGoods = (\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const sortingGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.noSort:\n      break;\n    case SortType.byLength:\n      sortingGoods.sort((firstGood: string, secondGood: string) => {\n        return firstGood.length - secondGood.length;\n      });\n      break;\n    case SortType.alphabetically:\n      sortingGoods.sort((firstGood: string, secondGood: string) => {\n        return firstGood.localeCompare(secondGood);\n      });\n      break;\n    default:\n      throw Error('Unexpected SortType value');\n  }\n\n  if (isReversed) {\n    sortingGoods.reverse();\n  }\n\n  return sortingGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.noSort);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const renderedGoods = sortGoods(goodsFromServer, sortType, isReversed);\n\n  const isResetButtonAvailable = sortType || isReversed;\n\n  const handleButtonReset = () => {\n    setSortType(SortType.noSort);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.alphabetically,\n          })}\n          onClick={() => setSortType(SortType.alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.byLength,\n          })}\n          onClick={() => setSortType(SortType.byLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonAvailable && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleButtonReset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {renderedGoods.map((good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          )))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}